{"version":3,"sources":["components/spinner.svg","components/Spinner.js","components/Pagination.js","components/UserInfo.js","components/AddUserForm.js","components/Table.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Spinner","className","src","spinner","alt","React","Component","Pagination","handleClick","e","a","page","Number","target","getAttribute","props","onSelectPage","preventDefault","stopPropagation","pages","i","length","this","push","currentPage","pagesBlock","map","value","href","onClick","UserInfo","user","firstName","lastName","defaultValue","description","streetAddress","city","state","zip","onClose","AddUserForm","openForm","setState","isActive","closeForm","submitForm","validator","allValid","id","email","phone","onAddUser","showMessages","SimpleReactValidator","autoForceUpdate","validators","name","message","rule","val","params","helpers","testRegex","indexOf","required","handleChange","bind","elem","currentTarget","key","console","log","addUserButton","form","onChange","onBlur","showMessageFor","Table","selectUser","userId","users","find","no","selectedUser","address","clearSelectedUser","search","onSearch","setClass","el","theadClass","sortedBy","fields","rows","head","onSort","searchBar","onSubmit","type","onInput","onFilter","String","searchQuery","tableContent","Main","getData","fetch","then","response","json","data","selectPage","Math","ceil","curPage","findUsersOnCurrentPage","usersToShow","selectRows","isLoaded","result","addUser","allUsers","filtered","offset","slice","query","filter","Object","values","entry","filteredUsers","sortUsers","bool","sortByValue","first","second","sort","sortedAllUsers","currentPageUsers","filterUsers","searchUsers","container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb8ba7fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spinner.941af6e2.svg\";","import React from \"react\";\nimport spinner from './spinner.svg';\n\nexport default class Spinner extends React.Component {\n    render() {\n        return (\n            <div className=\"loader-container\">\n                <img src={spinner} alt=\"Подождите, данные загружаются\" className=\"loader-img\" />\n            </div>\n        )\n    }\n}","import React from 'react';\n\nclass Pagination extends React.Component {\n\n    handleClick = async (e) => {\n        const page = Number (e.target.getAttribute('value'))\n        await this.props.onSelectPage(page) \n        e.preventDefault();\n        e.stopPropagation();\n        \n    }\n\n    render() {\n        const pages = []; \n        let i = 1; \n        while(pages.length<this.props.pages){pages.push(i++)}\n        \n        const currentPage = this.props.page;\n        const pagesBlock = pages.map(page=>{\n            return <a key={page} value={page} className={`page-href ${ currentPage === page ? ' active' : ''}`} href={page} onClick={this.handleClick}>{page}</a>\n        })\n        return (\n            <div>\n                {pagesBlock}\n            </div>\n        )\n    }\n}\n\nexport default Pagination;","import React from 'react';\n\nclass UserInfo extends React.Component {\n    render() {  \n        const user = this.props.user;\n\n        return (\n            this.props.user ?\n            (<div className=\"user-info\" onClick={(e) => e.stopPropagation()}>\n                <div>\n                    <p>Выбран пользователь <b>{user.firstName} {user.lastName}</b></p>\n                    <p>Описание:\n                    <textarea defaultValue={user.description}></textarea>\n                    </p>\n                    <p>Адрес проживания: <b>{user.streetAddress}</b></p>\n                    <p>Город: <b>{user.city}</b></p>\n                    <p>Провинция/штат: <b>{user.state}</b></p>\n                    <p>Индекс: <b>{user.zip}</b></p>\n                    <button className=\"close-button\" onClick={this.props.onClose}>X</button>\n                </div>\n            </div>)\n            :\n            ('')\n        )\n    }\n}\n\nexport default UserInfo;","import React from 'react';\nimport SimpleReactValidator from 'simple-react-validator';\n\nclass AddUserForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isActive: false,\n        }\n        this.validator = new SimpleReactValidator({\n            autoForceUpdate: this,\n            validators: {\n                name: {\n                    message: 'The :attribute must contains min. 4 letters',\n                    rule: (val, params, validator) => {\n                        return validator.helpers.testRegex(val, /^[a-zA-ZА-ЯЁа-яё]+$/i) && params.indexOf(val) === -1 && val.length > 3\n                    },\n                    required: true\n                }\n            }\n        });\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        const elem = e.currentTarget.value;\n        const key = e.currentTarget.getAttribute('id')\n        this.setState({\n            [key]: elem\n        })\n        console.log(this.state)\n    }\n\n    openForm = () => {\n        this.setState({ isActive: true })\n    }\n\n    closeForm = (e) => {\n        this.setState({ isActive: false })\n    }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        if (this.validator.allValid()) {\n            const user = {\n                id: Number(this.state.id),\n                email: this.state.email,\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                phone: this.state.phone,\n            }\n            this.props.onAddUser(user)\n            this.closeForm()\n        } else {\n            this.validator.showMessages();\n        }\n    }\n\n    render() {\n        const addUserButton = (\n            <button className=\"add-user\" onClick={this.openForm}>Добавить нового пользователя</button>\n        )\n\n        const form = (\n            <div className=\"overlay\" onClick={this.closeForm}>\n                <div className=\"modal\" onClick={(e)=> e.stopPropagation()}>\n                <h3>Добавить пользователя<button className=\"close-button\" onClick={this.closeForm} >закрыть</button></h3>\n                <div>\n                <div className=\"form-group\">\n                    <label>ID</label>\n                    <input\n                        className=\"form-control\"\n                        defaultValue={this.state.id}\n                        id=\"id\"\n                        onChange={this.handleChange}\n                        onBlur={() => this.validator.showMessageFor('id')}\n                    />\n                    <span className=\"input-invalid\">{this.validator.message('id', this.state.id, 'required|numeric|min:0,num')}</span>\n                </div>\n                <div className=\"form-group\">\n                    <label>firstName</label>\n                    <input \n                        className=\"form-control\" \n                        defaultValue={this.state.firstName} \n                        id=\"firstName\" \n                        onChange={this.handleChange} \n                        onBlur={() => this.validator.showMessageFor('name')} \n                    />\n                    <span className=\"input-invalid\">{this.validator.message('name', this.state.firstName, 'required|name')}</span>\n                </div>\n                <div className=\"form-group\">\n                    <label>lastName</label>\n                    <input \n                        className=\"form-control\" \n                        defaultValue={this.state.lastName} \n                        id=\"lastName\" \n                        onChange={this.handleChange} \n                        onBlur={() => this.validator.showMessageFor('last name')} \n                    />\n                    <span className=\"input-invalid\">{this.validator.message('last name', this.state.lastName, 'required|name')}</span>\n                </div>\n                <div className=\"form-group\">\n                    <label>email</label>\n                    <input \n                        className=\"form-control\" \n                        defaultValue={this.state.email} \n                        id=\"email\" \n                        onChange={this.handleChange} \n                        onBlur={() => this.validator.showMessageFor('email')} \n                    />\n                    <span className=\"input-invalid\">{this.validator.message('email', this.state.email, 'required|email')}</span>\n                </div>\n                <div className=\"form-group\">\n                    <label>phone</label>\n                    <input \n                        className=\"form-control\"\n                        defaultValue={this.state.phone} \n                        id=\"phone\" \n                        onChange={this.handleChange} \n                        onBlur={() => this.validator.showMessageFor('phone')} \n                    />\n                    <span className=\"input-invalid\">{this.validator.message('phone', this.state.phone, 'required|phone')}</span>\n                </div>\n                <button \n                    className=\"btn btn-primary\" \n                    onClick={this.submitForm}\n                    >Добавить в таблицу\n                </button>\n                </div>\n            </div>\n            </div>\n        );\n        return this.state.isActive ? form : addUserButton\n    }\n}\n\n\nexport default AddUserForm;","import React from 'react';\nimport UserInfo from './UserInfo.js';\nimport AddUserForm from './AddUserForm';\n\nclass Table extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedUser: null,\n        };  \n    }\n\n    selectUser = (e) => {\n        const userId = e.currentTarget.getAttribute('value');\n        const user = this.props.users.find(user =>  this.props.users.indexOf(user) === Number(userId));\n        const no = 'данные не определены'\n        this.setState({\n            selectedUser: {\n                firstName: user.firstName,\n                lastName: user.lastName,\n                description: user.description || no,\n                streetAddress: user.address?.streetAddress || no,\n                city: user.address?.city || no,\n                state: user.address?.state || no,\n                zip: user.address?.zip || no\n            }\n        })\n    }\n    clearSelectedUser = () => {\n        this.setState({\n            selectedUser: null,\n        })\n    }\n    \n    search = (e) => {\n        e.preventDefault();\n        this.props.onSearch();\n    }\n    \n    render() {\n        const setClass = (el) => {\n            let theadClass = 'th '\n            if (this.props.sortedBy === el) theadClass += 'selected';\n            if (this.props.sortedBy === `${el}-reverse`) theadClass += 'selected reversed'\n            return theadClass;\n        }\n\n        const fields = ['id', 'firstName', 'lastName', 'email', 'phone']\n        \n        const rows = this.props.users.map((user, i) => {\n            return (\n                <tr onClick={this.selectUser} key={i} value={i}>{\n                    fields.map(el => {\n                        return <td key={el}>{user[el]}</td>\n                    })\n                }</tr>\n            )\n        })\n\n        const head = (\n            <tr>{\n                fields.map(el => {\n                    return <th onClick={this.props.onSort} value={el} key={el}>{el}<span className={`${setClass(el)}`} ></span></th>\n                })\n            }</tr>\n        )\n        \n\n        const searchBar = (\n            <form className=\"search-bar\" onSubmit={this.search}>\n                <label>\n                    Фильтр:\n                    <input type=\"text\" name=\"search\" onInput={this.props.onFilter} value={String (this.props.searchQuery)} />\n                </label>\n                <input type=\"submit\" value=\"поиск\" />\n            </form>\n        )\n\n        const tableContent = this.props.users[0] ?  (\n            (<div>\n                <table className=\"table\">\n                    <thead>{head}</thead>\n                    <tbody>{rows}</tbody>\n                </table>\n                <UserInfo user={this.state.selectedUser} onClose={this.clearSelectedUser}/>\n            </div>)\n        ) :  (<h4>не найдено совпадений</h4>) \n\n        return (\n            <div className=\"table-container\">\n                <div className=\"serch-bar-container\">\n                    {searchBar}\n                    <AddUserForm onAddUser={this.props.onAddUser} />\n                </div>\n                {tableContent}\n            </div>\n        )\n    }\n}\n\nexport default Table;","import React from 'react';\nimport Spinner from './Spinner.js';\nimport Pagination from './Pagination.js'\nimport Table from './Table.js'\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoaded: true,\n            page: 1,\n            pages: [],\n            users: [],\n            user: null,\n            rows: null,\n            data: null,\n            usersToShow: [],\n            searchQuery: '',\n            sortedBy: null,\n        };\n    }\n\n    getData = async (rows) => {\n        const data = await fetch(`https://www.filltext.com/?rows=${rows}&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`).\n            then(response => response.json())\n        return data;\n    }\n\n    selectPage = async (page) => {\n        const pages = Math.ceil(this.state.users.length / 50);\n        const curPage = page <= pages ? page : pages;\n        await this.setState({\n            page: curPage,\n            pages: pages,\n        })\n        const users = await this.findUsersOnCurrentPage([...this.state.users]);\n        await this.setState({ usersToShow: users, })\n    }\n\n    selectRows = async (e) => {\n        this.setState({\n            rows: e.target.value,\n            isLoaded: false,\n        });\n        try {\n            await this.getData(e.target.value).then(result => {\n                this.setState({\n                    data: result,\n                    users: result,\n                    isLoaded: true,\n                })\n            });\n            await this.selectPage(1)\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    addUser = async (user) => {\n        const allUsers = [user, ...this.state.data];\n        const filtered = [user, ...this.state.users]\n        await this.setState({\n            data: allUsers,\n            users: filtered,\n        })\n        await this.selectPage(1)\n\n    }\n\n    findUsersOnCurrentPage = (users) => {\n        const offset = this.state.page * 50;\n        return [...users.slice(offset - 50, offset)];\n    }\n\n    search = async (users, query) => {\n        if (!query || query === '') return users;\n\n        let filteredUsers = await users.filter((user) => Object.values(user).find(entry => {\n            return String(entry).indexOf(query) !== -1;\n        }));\n        return filteredUsers;\n    }\n\n    sortUsers = async (e) => {\n        const value = e.currentTarget.getAttribute('value');\n        const sortedBy =\n            this.state.sortedBy === value ?\n                `${value}-reverse` : value\n        const bool =\n            sortedBy === value ?\n                1 : -1;\n\n        const sortByValue = (first, second) => first[value] > second[value] ? bool : -(bool)\n        const sortedAllUsers = await [...this.state.data].sort(sortByValue);\n\n        await this.setState({\n            sortedBy: sortedBy,\n        })\n        if (this.state.searchQuery === '' || this.state.searchQuery === null) {\n            await this.setState({\n                data: await sortedAllUsers,\n                users: sortedAllUsers,\n                usersToShow: await this.findUsersOnCurrentPage(sortedAllUsers)\n            })\n        } else {\n            const filtered = await this.search(sortedAllUsers, this.state.searchQuery);\n            const currentPageUsers = await this.findUsersOnCurrentPage(filtered);\n            await this.setState({\n                usersToShow: await currentPageUsers,\n                users: filtered,\n            })\n        }\n    }\n\n\n    filterUsers = async (e) => { //поиск по странице\n        const query = await e.currentTarget.value\n        await this.setState({\n            searchQuery: query,\n        })\n        const currentPageUsers = await this.findUsersOnCurrentPage([...this.state.data]);\n        const filtered = await this.search(currentPageUsers, this.state.searchQuery);\n        await this.setState({\n            usersToShow: filtered,\n        })\n    }\n\n    searchUsers = async () => { //поиск по всем юзерам\n        const query = this.state.searchQuery;\n        const filtered = await this.search([...this.state.data], query);\n        await this.setState({\n            users: filtered,\n        })\n        await this.selectPage(1)\n    }\n\n    render() {\n        if (!this.state.isLoaded) return <Spinner />\n        const container = !this.state.rows ?\n            (<h1>Выбирайте кнопочку...</h1>)\n            :\n            (<div>\n                <Pagination\n                    page={this.state.page}\n                    pages={this.state.pages}\n                    onSelectPage={this.selectPage}\n                />\n                <Table\n                    isLoaded={this.state.isLoaded}\n                    sortedBy={this.state.sortedBy}\n                    users={this.state.usersToShow}\n                    searchQuery={this.state.searchQuery}\n                    onAddUser={this.addUser}\n                    onFilter={this.filterUsers}\n                    onSearch={this.searchUsers}\n                    onSort={this.sortUsers}\n                />\n            </div>);\n        return (\n            <div>\n                <button onClick={this.selectRows} value=\"32\">Поменьше...</button>\n                <button onClick={this.selectRows} value=\"1000\">Побольше!</button>\n                {container}\n            </div>\n        )\n    }\n}\n\nexport default Main;","import './App.css';\nimport React from 'react';\nimport Main from './components/Main.js'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Main className=\"main\"/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}